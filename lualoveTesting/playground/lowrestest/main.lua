local push = require "push"

local gameWidth, gameHeight = 64, 64 --fixed game resolution
local windowWidth, windowHeight = love.window.getDesktopDimensions()
windowWidth, windowHeight = windowWidth*.9, windowHeight*.9 --make the window a bit smaller than the screen itself

push:setupScreen(gameWidth, gameHeight, windowWidth, windowHeight, {fullscreen = false, resizable = false, pixelperfect = true, highdpi =false, canvas = false})

function love.load()

	love.physics.setMeter(1) --the height of a meter our worlds will be 64px
  world = love.physics.newWorld(0, 9.81*1, true)
  objects = {} -- table to hold all our physical objects

  objects.ground = {}
  objects.ground.body = love.physics.newBody(world, 64/2, 64 -2/2, "static")
  objects.ground.shape = love.physics.newRectangleShape(64,2)
  objects.ground.fixture = love.physics.newFixture(objects.ground.body, objects.ground.shape)

  objects.ball = {}
  objects.ball.body = love.physics.newBody(world, 64/2, 64/2, "dynamic") --place the body in the center of the world and make it dynamic, so it can move around
  objects.ball.shape = love.physics.newCircleShape(1) --the ball's shape has a radius of 20
  objects.ball.fixture = love.physics.newFixture(objects.ball.body, objects.ball.shape, 1) -- Attach fixture to body and give it a density of 1.
  objects.ball.fixture:setRestitution(0.9) --let the ball bounce

  love.graphics.setBackgroundColor(100, 100, 200, 255)

  objects.block1 = {}
  objects.block1.body = love.physics.newBody(world, 64/2, 64/2, "dynamic")
  objects.block1.shape = love.physics.newRectangleShape(10,1)
  objects.block1.fixture = love.physics.newFixture(objects.block1.body, objects.block1.shape)

end


function love.update(dt)

	  world:update(dt) --this puts the world into motion
 
  --here we are going to create some keyboard events
  if love.keyboard.isDown("right") then --press the right arrow key to push the ball to the right
    objects.ball.body:applyForce(400, 0)
  elseif love.keyboard.isDown("left") then --press the left arrow key to push the ball to the left
    objects.ball.body:applyForce(-400, 0)
  elseif love.keyboard.isDown("up") then --press the up arrow key to set the ball in the air
    objects.ball.body:setPosition(64/2, 64/2)
    objects.ball.body:setLinearVelocity(0, 0) --we must set the velocity to zero to prevent a potentially large velocity generated by the change in position
  elseif love.keyboard.isDown("down") then
  	objects.ball.body:applyForce(0, -400)
  end

end







function love.draw()
  push:start()

  love.graphics.setColor(72, 160, 14) -- set the drawing color to green for the ground
  love.graphics.polygon("fill", objects.ground.body:getWorldPoints(objects.ground.shape:getPoints())) 
   love.graphics.setColor(193, 47, 14) --set the drawing color to red for the ball
  love.graphics.circle("fill", objects.ball.body:getX(), objects.ball.body:getY(), objects.ball.shape:getRadius())
  love.graphics.setColor(100,100,200,255)
  love.graphics.polygon("fill",objects.block1.body:getWorldPoints(objects.ground.shape:getPoints()))

  push:finish()
end